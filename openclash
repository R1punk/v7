#!/bin/bash

#ip1=$(ip -4 addr show rmnet_data2 | grep -oP '(?<=inet\s)\d+(\.\d+){3}' | awk '{print $1}')
#ip2=$(ip -4 addr show rmnet_data1 | grep -oP '(?<=inet\s)\d+(\.\d+){3}' | awk '{print $1}')
trap ctrl_c INT
function ctrl_c() {
	echo ""
	sleep 0.5
	exit 1
}
function satu() {
            dialog --inputbox "Profile :" 10 45 2>prof
            namet1=$(<prof)
            dialog --inputbox "SNI :" 10 45 2>snit1.txt
            snt1=$(<snit1.txt)
            dialog --inputbox "Import URL :" 10 45 2>trojan1.txt
            url1=$(<trojan1.txt)

host1=$(grep trojan:// trojan1.txt|awk -F "://" '{print $2}'|awk -F "@" '{print $2}'|awk -F ":" '{print $1}'|awk "NR==1")
#host=$(ping $host -w1 -c1|awk "NR==1"|awk -F '(' '{print $2}'|awk -F ')' '{print $1}')
port1=$(grep trojan:// trojan1.txt|awk -F "://" '{print $2}'|awk -F "@" '{print $2}'|awk -F ":" '{print $2}'|awk -F "/" '{print $1}'|awk "NR==1")
#sni=$(grep sni= sni1.txt|awk -F "=" '{print $2}')
pass1=$(grep trojan:// trojan1.txt|awk -F "://" '{print $2}'|awk -F "@" '{print $1}'|awk "NR==1")
echo """
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
mode: rule
log-level: info
allow-lan: true
external-controller: 0.0.0.0:9090
bind-address: '*'
external-ui: yacd-gh-pages
ipv6: false
dns:
  enable: true
  ipv6: false
  enhanced-mode: redir-host
  listen: 0.0.0.0:7894
  fallback-filter:
    geoip: false
    ipcidr:
    - 240.0.0.0/4
  nameserver:
    - https://cloudflare-dns.com/dns-query
    - https://dns.google/dns-query
    - tls://1.1.1.1:853
    - tls://8.8.8.8:853
  fallback:
    - tcp://1.1.1.1
    - tcp://8.8.8.8
    - 1.1.1.1
    - 8.8.8.8
tun:
  enable: true
  stack: system 
  macOS-auto-route: true
  macOS-auto-detect-interface: true
  dns-hijack:
    - tcp://8.8.8.8:53
experimental:
  interface-name: en0

proxies:
  - {name: $namet1, server: $host1, port: $port1, udp: true, type: trojan, password: $pass1, sni: $snt1, skip-cert-verify: true}

proxy-groups:
  - name: trojan
    type: select
    proxies:
      - $namet1

rules:
 - MATCH,trojan""" >$HOME/.config/clash/a/config.yaml
echo """
Akun Trojan
Profile : $namet1
Server  : $host1
port    : $port1
Password: $pass1
Sni     : $snt1
""" >single.txt
akun=$(cat single.txt)

display_result () {
 dialog --title "Info Account" \
        --no-collapse \
        --msgbox "$akun" 0 0
}

#result=$(cat akunt.txt)
display_result
rm single.txt 2>&1
rm prof 2>&1
rm snit1.txt 2>&1
rm trojan1.txt 2>&1
sleep 2
#mv $HOME/.config/clash/config.yaml $HOME/.config/clash/configbackup.yaml
cp $HOME/.config/clash/a/config.yaml $HOME/.config/clash/
clash -t -d $HOME/.config/clash -f $HOME/.config/clash/config.yaml > $HOME/.config/clash/run.logs
if [ $? != 0 ]; then
for i in $(seq 1 100)
do
    sleep 0.1 
    echo $i
done | whiptail --title 'Start Clash' --gauge 'Connecting...' 6 60 0
status=$(cat $HOME/.config/clash/run.logs)
display_result () {
 dialog --title "Status Tunnels" \
        --no-collapse \
        --infobox "$status" 0 0
}
status=$(cat $HOME/.config/clash/run.logs)
display_result
sleep 2
menu
else
screen -dmS v2 clash
for i in $(seq 1 100)
do
    sleep 0.1 
    echo $i
done | whiptail --title 'Start Clash' --gauge 'Connecting...' 6 60 0
status=$(cat $HOME/.config/clash/run.logs)
display_result () {
 dialog --title "Status Tunnels" \
        --no-collapse \
        --msgbox "$status" 0 0
}
status=$(cat $HOME/.config/clash/run.logs)
display_result
xdg-open "http://127.0.0.1:9090/ui/#/proxies" & exit
fi
}

#Dua
function dua() {
            dialog --inputbox "Profile :" 10 45 2>namet2
            nmt2=$(<namet2)
            dialog --inputbox "SNI :" 10 45 2>snit2.txt
            snt2=$(<snit2.txt)
            dialog --inputbox "Import URL :" 10 45 2>trojan2.txt
            url2=$(<trojan2.txt)
host2=$(grep trojan:// trojan2.txt|awk -F "://" '{print $2}'|awk -F "@" '{print $2}'|awk -F ":" '{print $1}'|awk "NR==1")
#host=$(ping $host -w1 -c1|awk "NR==1"|awk -F '(' '{print $2}'|awk -F ')' '{print $1}')
port2=$(grep trojan:// trojan2.txt|awk -F "://" '{print $2}'|awk -F "@" '{print $2}'|awk -F ":" '{print $2}'|awk -F "/" '{print $1}'|awk "NR==1")
#sni=$(grep sni= sni1.txt|awk -F "=" '{print $2}')
pass2=$(grep trojan:// trojan2.txt|awk -F "://" '{print $2}'|awk -F "@" '{print $1}'|awk "NR==1")
echo """proxies:
- name: "$nmt2"
  type: trojan
  server: $host2
  port: $port2
  password: $pass2
  udp: true
  sni: $snt2
  skip-cert-verify: true """ > $HOME/.config/clash/Game.yaml
sleep 2
dialog --inputbox "Profile :" 10 45 2>namet3
            nmt3=$(<namet3)
            dialog --inputbox "SNI :" 10 45 2>snit3.txt
            snt3=$(<snit3.txt)
            dialog --inputbox "Import URL :" 10 45 2>trojan3.txt
            url3=$(<trojan3.txt)
host3=$(grep trojan:// trojan3.txt|awk -F "://" '{print $2}'|awk -F "@" '{print $2}'|awk -F ":" '{print $1}'|awk "NR==1")
#host=$(ping $host -w1 -c1|awk "NR==1"|awk -F '(' '{print $2}'|awk -F ')' '{print $1}')
port3=$(grep trojan:// trojan3.txt|awk -F "://" '{print $2}'|awk -F "@" '{print $2}'|awk -F ":" '{print $2}'|awk -F "/" '{print $1}'|awk "NR==1")
#sni=$(grep sni= sni1.txt|awk -F "=" '{print $2}')
pass3=$(grep trojan:// trojan3.txt|awk -F "://" '{print $2}'|awk -F "@" '{print $1}'|awk "NR==1")
echo """proxies:
- name: "$nmt3"
  type: trojan
  server: $host3
  port: $port3
  password: $pass3
  udp: true
  sni: $snt3
  skip-cert-verify: true """ > $HOME/.config/clash/Sosmed.yaml
sleep 2
dialog --inputbox "Profile :" 10 45 2>namet4
            nmt4=$(<namet4)
            dialog --inputbox "SNI :" 10 45 2>snit4.txt
            snt4=$(<snit4.txt)
            dialog --inputbox "Import URL :" 10 45 2>trojan4.txt
            url4=$(<trojan4.txt)
host4=$(grep trojan:// trojan4.txt|awk -F "://" '{print $2}'|awk -F "@" '{print $2}'|awk -F ":" '{print $1}'|awk "NR==1")
#host=$(ping $host -w1 -c1|awk "NR==1"|awk -F '(' '{print >
port4=$(grep trojan:// trojan4.txt|awk -F "://" '{print $2}'|awk -F "@" '{print $2}'|awk -F ":" '{print $2}'|awk -F "/" '{print $1}'|awk "NR==1")
#sni=$(grep sni= sni1.txt|awk -F "=" '{print $2}')
pass4=$(grep trojan:// trojan4.txt|awk -F "://" '{print $2}'|awk -F "@" '{print $1}'|awk "NR==1")
echo """proxies:
- name: "$nmt4"
  type: trojan
  server: $host4
  port: $port4
  password: $pass4
  udp: true
  sni: $snt4
  skip-cert-verify: true """ > $HOME/.config/clash/Youtube.yaml
sleep 2
dialog --inputbox "Profile :" 10 45 2>namet5
            nmt5=$(<namet5)
            dialog --inputbox "SNI :" 10 45 2>snit5.txt
            snt5=$(<snit5.txt)
            dialog --inputbox "Import URL :" 10 45 2>trojan5.txt
            url5=$(<trojan5.txt)
host5=$(grep trojan:// trojan5.txt|awk -F "://" '{print $2}'|awk -F "@" '{print $2}'|awk -F ":" '{print $1}'|awk "NR==1")
port5=$(grep trojan:// trojan5.txt|awk -F "://" '{print $2}'|awk -F "@" '{print $2}'|awk -F ":" '{print $2}'|awk -F "/" '{print $1}'|awk "NR==1")
pass5=$(grep trojan:// trojan5.txt|awk -F "://" '{print $2}'|awk -F "@" '{print $1}'|awk "NR==1")
echo """proxies:
- name: "$nmt5"
  type: trojan
  server: $host5
  port: $port5
  password: $pass5
  udp: true
  sni: $snt5
  skip-cert-verify: true """ > $HOME/.config/clash/Browser.yaml
rm namet2 2>&1
rm snit2.txt 2>&1
rm trojan2.txt 2>&1
rm namet3 2>&1
rm snit3.txt 2>&1
rm trojan3.txt 2>&1
rm namet4 2>&1
rm snit4.txt 2>&1
rm trojan4.txt 2>&1
rm namet5 2>&1
rm snit5.txt 2>&1
rm trojan5.txt 2>&1
echo """
akun trojan 1
Profile       : $nmt2
Host          : $host2
Port           : $port2
password : $pass2
sni              : $snt2
_________________________________
akun trojan 2
Profile       : $nmt3
Host          : $host3
Port           : $port3
password : $pass3
sni              : $snt3
__________________________________
akun trojan 3
Profile       : $nmt4
Host          : $host4
Port           : $port4
password : $pass4
sni              : $snt4
___________________________________
akun trojan 4
Profile       : $nmt5
Host          : $host5
Port           : $port5
password : $pass5
sni              : $snt5
___________________________________
"""> akunt.txt
display_result () {
 dialog --title "Info Account" \
        --no-collapse \
        --msgbox "$result" 0 0
}

result=$(cat akunt.txt)
display_result
rm akunt.txt 2>&1 
clear
#mv $HOME/.config/clash/config.yaml $HOME/.config/clash/configbackup.yaml
cp $HOME/.config/clash/lb/config.yaml $HOME/.config/clash/config.yaml
clash -t -d $HOME/.config/clash -f $HOME/.config/clash/config.yaml > $HOME/.config/clash/run.logs
if [ $? != 0 ]; then
for i in $(seq 1 100)
do
    sleep 0.1 
    echo $i
done | whiptail --title 'Start Clash' --gauge 'Connecting...' 6 60 0
status=$(cat $HOME/.config/clash/run.logs)
display_result () {
 dialog --title "Status Tunnels" \
        --no-collapse \
        --infobox "$status" 0 0
}
status=$(cat $HOME/.config/clash/run.logs)
display_result
sleep 2
menu
else
screen -dmS v2 clash
for i in $(seq 1 100)
do
    sleep 0.1 
    echo $i
done | whiptail --title 'Start Clash' --gauge 'Connecting...' 6 60 0
status=$(cat $HOME/.config/clash/run.logs)
display_result () {
 dialog --title "Status Tunnels" \
        --no-collapse \
        --msgbox "$status" 0 0
}
status=$(cat $HOME/.config/clash/run.logs)
display_result
xdg-open "http://127.0.0.1:9090/ui/#/proxies" & exit
fi
}

#Tiga
function tiga() {
    dialog --inputbox "Profile :" 10 45 2>namev
            nmv=$(<namev)
            dialog --inputbox "BUG : " 10 45 2>bug.txt
            bug=$(<bug.txt)
            dialog --inputbox "Iport URL" 10 45 2>vmess.txt
#            urlv=$(<vmess.txt)
            sleep 2
mkdir -p v2ray;juuid=1;n=2
portv=$(grep vmess: vmess.txt 2>/dev/null|awk -F "//" '{print $2}'|base64 -d 2>/dev/null|sed ':a;N;$!ba;s/\n  //g'|awk -F '"port' '{print $2}'|grep :|sed ':a;N;$!ba;s/\n/ /g'|awk -F ',' '{print $1}'|sed -e 's/://g' -e 's/ //g' -e 's/"//g')
  if [ ! -f $portv ]; then
 while [ $juuid -lt 17 ]; do
uuid=$(grep vmess: vmess.txt 2>/dev/null|awk -F "//" '{print $2}'|base64 -d 2>/dev/null|sed ':a;N;$!ba;s/\n  //g'|awk -F 'id' '{print $"'$n'"}'|grep :|sed ':a;N;$!ba;s/\n/ /g'|awk -F ',' '{print $1}'|sed -e 's/://g' -e 's/ //g' -e 's/"//g')
juuid=$(echo $uuid|wc -c);((n++))
 done
hostv=$(grep vmess: vmess.txt 2>/dev/null|awk -F "//" '{print $2}'|base64 -d 2>/dev/null|sed ':a;N;$!ba;s/\n  //g'|awk -F '"add' '{print $2}'|grep :|sed ':a;N;$!ba;s/\n/ /g'|awk -F ',' '{print $1}'|sed -e 's/://g' -e 's/ //g' -e 's/"//g')
aid=$(grep vmess: vmess.txt 2>/dev/null|awk -F "//" '{print $2}'|base64 -d 2>/dev/null|sed ':a;N;$!ba;s/\n  //g'|awk -F '"aid' '{print $2}'|grep :|sed ':a;N;$!ba;s/\n/ /g'|awk -F ',' '{print $1}'|sed -e 's/://g' -e 's/ //g' -e 's/"//g')
net=$(grep vmess: vmess.txt 2>/dev/null|awk -F "//" '{print $2}'|base64 -d 2>/dev/null|sed ':a;N;$!ba;s/\n  //g'|awk -F '"net' '{print $2}'|grep :|sed ':a;N;$!ba;s/\n/ /g'|awk -F ',' '{print $1}'|sed -e 's/://g' -e 's/ //g' -e 's/"//g')
path=$(grep vmess: vmess.txt 2>/dev/null|awk -F "//" '{print $2}'|base64 -d 2>/dev/null|sed ':a;N;$!ba;s/\n  //g'|awk -F '"path' '{print $2}'|grep :|sed ':a;N;$!ba;s/\n/ /g'|awk -F ',' '{print $1}'|sed -e 's/://g' -e 's/ //g' -e 's/"//g')
path=$(echo $path|sed 's/\\u003d/=/g'|sed 's/\\u0026/\&/g')
tls=$(grep vmess: vmess.txt 2>/dev/null|awk -F "//" '{print $2}'|base64 -d 2>/dev/null|sed ':a;N;$!ba;s/\n/ /g'|awk -F 'tls":' '{print $2}'|awk -F ',' '{print $1}'|sed -e 's/://g' -e 's/ //g' -e 's/"//g' -e 's/}//g')
if [ -f $tls ]; then
tls=$(grep vmess: vmess.txt 2>/dev/null|awk -F "//" '{print $2}'|base64 -d 2>/dev/null|grep tls|sed -e 's/:/=/g' -e 's/ //g' -e 's/"//g' -e 's/}//g'|awk -F "=" '{print $1}')
 if [ ! -f $tls ]; then
  if [ $tls != "tls" ]; then
  tls=""
  fi
 fi
fi
   fi
echo """
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
mode: rule
log-level: info
allow-lan: true
external-controller: 0.0.0.0:9090
bind-address: '*'
external-ui: yacd-gh-pages
ipv6: false
dns:
  enable: true
  ipv6: false
  enhanced-mode: redir-host
  listen: 0.0.0.0:7894
  fallback-filter:
    geoip: false
    ipcidr:
    - 240.0.0.0/4
  nameserver:
    - https://cloudflare-dns.com/dns-query
    - https://dns.google/dns-query
    - tls://1.1.1.1:853
    - tls://8.8.8.8:853
  fallback:
    - tcp://1.1.1.1
    - tcp://8.8.8.8
    - 1.1.1.1
    - 8.8.8.8
tun:
  enable: true
  stack: system 
  macOS-auto-route: true
  macOS-auto-detect-interface: true
  dns-hijack:
    - tcp://8.8.8.8:53
experimental:
  interface-name: en0

proxies:
  - {name: $nmv, server: $hostv, port: $portv, type: vmess, uuid: $uuid, sni: $bug, alterId: 0, cipher: auto, tls: true, skip-cert-verify: true, udp: true, network: ws, ws-path: $path, ws-headers: {Host: $bug}}
proxy-groups:
  - name: vmess
    type: select
    proxies:
      - $nmv

rules:
 - MATCH,vmess """ >$HOME/.config/clash/vm/config.yaml
echo """
Profile : $nmv
Host    : $hostv
Port    : $portv
uuid    : $uuid
path    : $path
sni     : $bug
"""> akun.txt
display_result () {
        dialog --title "Info Account" \
        --no-collapse \
        --msgbox "$result" 0 0
}

result=$(cat akun.txt)
display_result
cp $HOME/.config/clash/vm/config.yaml $HOME/.config/clash/ 2>&1
clash -t -d $HOME/.config/clash -f $HOME/.config/clash/config.yaml > $HOME/.config/clash/run.logs 2>&1
sleep 2
if [ $? != 0 ]; then
for i in $(seq 1 100)
do
    sleep 0.1 
    echo $i
done | whiptail --title 'Start Clash' --gauge 'Connecting...' 6 60 0
status=$(cat $HOME/.config/clash/run.logs)
display_result () {
 dialog --title "Status Tunnels" \
        --no-collapse \
        --infobox "$status" 0 0
}
status=$(cat $HOME/.config/clash/run.logs)
display_result
sleep 2
menu
else
screen -dmS v2 clash
for i in $(seq 1 100)
do
    sleep 0.1 
    echo $i
done | whiptail --title 'Start Clash' --gauge 'Connecting...' 6 60 0
status=$(cat $HOME/.config/clash/run.logs)
display_result () {
 dialog --title "Status Tunnels" \
        --no-collapse \
        --msgbox "$status" 0 0
}
status=$(cat $HOME/.config/clash/run.logs)
display_result
xdg-open "http://127.0.0.1:9090/ui/#/proxies" & exit
fi
rm bug.txt 2>&1
rm vmess.txt 2>&1
rm akun.txt 2>&1

}

#empat
function empat() {
mkdir backupclash #2>&1
cp $HOME/.config/clash/*.yaml $HOME/backupclash #2>&1
cp -R backupclash /sdcard #$2>&1
#a=$?https://raw.githubusercontent.com/R1punk/v7/main/openclash
#$if [ $a = 0 ]; then
#cp -R /backupclash/*.yaml /sdcard/backupclash
rm -r -f backupclash
#fi
for i in $(seq 1 100)
do
    sleep 0.1 
    echo $i
done | whiptail --title 'Backup Config' --gauge 'Please wait...' 6 60 0
#stat=$(Config Sukses Di Backup, Config Berada Di Directory Sdcard/backupclash)
display_result () {
        dialog --title "Sukses Backup" \
        --no-collapse \
        --msgbox "File berada di sdcard/backupclash" 0 0
}
#stat=$(Config Sukses Di Backup,Config Berada Di Directory Sdcard/backupclash)
display_result
menu 
}

#Lima
function lima() {
dialog --inputbox "Masukan Directory anda menyimpan Config..\nContoh :\nsdcard/Downloads/config.yaml:" 10 45 2>import
imp=$(<import)
e=$(?)
if [[ $e == '0' ]];
then
cp -r -f /$imp $HOME/.config/clash/config.yaml 2>&1
display_result () {
        dialog --title "Sukses Restore" \
        --no-collapse \
        --msgbox "Restore Sukses" 0 0
}
#stat=$(Config Sukses Di Backup,Config Berada Di Directory Sdcard/backupclash)
display_result
else
menu
fi
rm import 2>&1
}
function enam(){
dialog --inputbox "Pilih Config Yang Mau Di Edit\n1. Trojan\n2. Trojan Lb\n3. Vmes\n4. Yg Sedang DiGunakan\n0. Kembali Ke MENU" 20 30 2>p
p=$(<p)
case $p in
1)
micro $HOME/.config/clash/a/config.yaml
sleep 2
dialog --yesno "Start OpenClash...?" 10 25
res=$? 
if [[ $res == "0" ]];
then
cp $HOME/.config/clash/a/config.yaml $HOME/.config/clash/ 2>&1 
       clash -t -d $HOME/.config/clash -f $HOME/.config/clash/config.yaml > $HOME/.config/clash/run.logs
       if [ $? != 0 ]; then
for i in $(seq 1 100)
do
    sleep 0.1 
    echo $i
done | whiptail --title 'Start Clash' --gauge 'Connecting...' 6 60 0
status=$(cat $HOME/.config/clash/run.logs)
display_result () {
 dialog --title "Status Tunnels" \
        --no-collapse \
        --infobox "$status" 0 0
}
status=$(cat $HOME/.config/clash/run.logs)
display_result
sleep 2
menu
else
screen -dmS v2 clash
for i in $(seq 1 100)
do
    sleep 0.1 
    echo $i
done | whiptail --title 'Start Clash' --gauge 'Connecting...' 6 60 0
status=$(cat $HOME/.config/clash/run.logs)
display_result () {
 dialog --title "Status Tunnels" \
        --no-collapse \
        --msgbox "$status" 0 0
}
status=$(cat $HOME/.config/clash/run.logs)
display_result
xdg-open "http://127.0.0.1:9090/ui/#/proxies" & exit
fi
fi
;;

2)
function start(){
cp $HOME/.config/clash/lb/config.yaml $HOME/.config/clash/ 2>&1 
       clash -t -d $HOME/.config/clash -f $HOME/.config/clash/config.yaml > $HOME/.config/clash/run.logs
       screen -dmS v2 clash
       for i in $(seq 1 100)
do
    sleep 0.1 
    echo $i
done | whiptail --title 'Start Clash' --gauge 'Connecting...' 6 60 0
status=$(cat $HOME/.config/clash/run.logs)
display_result () {
 dialog --title "Status Tunnels" \
        --no-collapse \
        --msgbox "$status" 0 0
}
status=$(cat $HOME/.config/clash/run.logs)
display_result
res=$(?)
if [ $res = '0' ];
then
xdg-open "http://127.0.0.1:9090/ui/#/proxies" & exit
else
dialog --msgbox "config eror" 0 0
menu
fi
}

dialog --inputbox "Pilih yang mau di edit\n1. Games\n2. Youtube\n3. Browser\n4. Sosmed\n0. Kembali Ke MENU" 20 30 2>c
co=$(<c)
if [[ $co = '1' ]];
then
       micro $HOME/.config/clash/Game.yaml
       dialog --yesno "Start OpenClash...?" 10 25
       res=$?
       if [ $res = '0' ]; then
       start
       fi
       if [ $res = '1' ]; then
       enam
       fi
elif [[ $co = '2' ]];
then
      micro $HOME/.config/clash/Youtube.yaml
      dialog --yesno "Start OpenClash...?" 10 25
       res=$?
       if [ $res = '0' ]; then
       start
       fi
       if [ $res = '1' ]; then
       enam
       fi
elif [[ $co = '3' ]];
then
      micro $HOME/.config/clash/Browser.yaml
      dialog --yesno "Start OpenClash...?" 10 25
       res=$?
       if [ $res = '0' ]; then
       start
       fi
       if [ $res = '1' ]; then
       enam
       fi
elif [[ $co = '4' ]];
then
      micro $HOME/.config/clash/Sosmed.yaml
      dialog --yesno "Start OpenClash...?" 10 25
       res=$?
       if [ $res = '0' ]; then
       start
       fi
       if [ $res = '1' ]; then
       enam
       fi
elif [[ $co = '0' ]];
then
       menu
else
       status=$(Input Salah)
       display_result () {
#        dialog --title "Status Tunnels" \
        --no-collapse \
        --msgbox "$status" 0 0
}
#status=$(cat $HOME/.config/clash/run.logs)
display_result
       enam
fi
;;
3)
micro $HOME/.config/clash/vm/config.yaml
sleep 2
dialog --yesno "Start OpenClash...?" 10 25
res=$? 
if [[ $res == "0" ]];
then
cp $HOME/.config/clash/vm/config.yaml $HOME/.config/clash/ 2>&1 
       clash -t -d $HOME/.config/clash -f $HOME/.config/clash/config.yaml > $HOME/.config/clash/run.logs
       if [ $? != 0 ]; then
for i in $(seq 1 100)
do
    sleep 0.1 
    echo $i
done | whiptail --title 'Start Clash' --gauge 'Connecting...' 6 60 0
status=$(cat $HOME/.config/clash/run.logs)
display_result () {
 dialog --title "Status Tunnels" \
        --no-collapse \
        --infobox "$status" 0 0
}
status=$(cat $HOME/.config/clash/run.logs)
display_result
sleep 2
menu
else
screen -dmS v2 clash
for i in $(seq 1 100)
do
    sleep 0.1 
    echo $i
done | whiptail --title 'Start Clash' --gauge 'Connecting...' 6 60 0
status=$(cat $HOME/.config/clash/run.logs)
display_result () {
 dialog --title "Status Tunnels" \
        --no-collapse \
        --msgbox "$status" 0 0
}
status=$(cat $HOME/.config/clash/run.logs)
display_result
xdg-open "http://127.0.0.1:9090/ui/#/proxies" & exit
fi
else
menu
fi
;;
4)
micro $HOME/.config/clash/config.yaml
dialog --yesno "Start OpenClash...?" 10 25
res=$?
if [ $res = '0' ]; then
        clash -t -d $HOME/.config/clash -f $HOME/.config/clash/config.yaml > $HOME/.config/clash/run.logs
       if [ $? != 0 ]; then
for i in $(seq 1 100)
do
    sleep 0.1 
    echo $i
done | whiptail --title 'Start Clash' --gauge 'Connecting...' 6 60 0
status=$(cat $HOME/.config/clash/run.logs)
display_result () {
 dialog --title "Status Tunnels" \
        --no-collapse \
        --infobox "$status" 0 0
}
status=$(cat $HOME/.config/clash/run.logs)
display_result
sleep 2
menu
else
screen -dmS v2 clash
for i in $(seq 1 100)
do
    sleep 0.1 
    echo $i
done | whiptail --title 'Start Clash' --gauge 'Connecting...' 6 60 0
status=$(cat $HOME/.config/clash/run.logs)
display_result () {
 dialog --title "Status Tunnels" \
        --no-collapse \
        --msgbox "$status" 0 0
}
status=$(cat $HOME/.config/clash/run.logs)
display_result
xdg-open "http://127.0.0.1:9090/ui/#/proxies" & exit
fi
else
menu
fi
;;
0)
menu
;;
esac
rm p > /dev/null 2>&1
}
#Tujuh
function tujuh(){
#       
       clash -t -d $HOME/.config/clash -f $HOME/.config/clash/config.yaml > $HOME/.config/clash/run.logs
#cd $HOME
if [ $? != 0 ]; then
for i in $(seq 1 100)
do
    sleep 0.1 
    echo $i
done | whiptail --title 'Start Clash' --gauge 'Connecting...' 6 60 0
status=$(cat $HOME/.config/clash/run.logs)
display_result () {
 dialog --title "Status Tunnels" \
        --no-collapse \
        --infobox "$status" 0 0
}
status=$(cat $HOME/.config/clash/run.logs)
display_result
sleep 2
menu
else
screen -dmS v2 clash
for i in $(seq 1 100)
do
    sleep 0.1 
    echo $i
done | whiptail --title 'Start Clash' --gauge 'Connecting...' 6 60 0
status=$(cat $HOME/.config/clash/run.logs)
display_result () {
 dialog --title "Status Tunnels" \
        --no-collapse \
        --msgbox "$status" 0 0
}
status=$(cat $HOME/.config/clash/run.logs)
display_result
xdg-open "http://127.0.0.1:9090/ui/#/proxies" & exit
fi
}
#Delapan
function delapan() {
    pidof clash >pid
PID=$(<pid)
kill -9 $PID
rm pid 2>&1
}

#MENU
function menu() {
    dialog --backtitle "                         Ripunk@E99" --title  \
       "Open Clash" --inputbox \
" \n_________________________________________\nMenu Tunnel :\n_________________________________________\n|1. Trojan                              |\n|2. LB                                  |\n|3. Vmess                               |\n_________________________________________\nMenu Config :\n_________________________________________\n|4. Backup Config                       |\n|5. Restore Config                      |\n|6. Edit config                         |\n_________________________________________\nStart Tunnels :\n_________________________________________\n|7. Start Clash                         |\n|8. Stop Clash                          |\n_________________________________________\n                               By :Ripunk " 30 45 2>pilih
pil=$(<pilih)
case $pil in
1)
satu
;;
2)
dua
;;
3)
tiga
;;
4)
empat
;;
5)
lima
;;
6)
enam
;;
7)
tujuh
;;
8)
delapan
;;
esac

rm pilih > /dev/null 2>&1
}

menu